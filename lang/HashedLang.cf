-- Comment
comment "//" ;
comment "{*" "*/" ;
-- Token
token KWVariable {"variables"} | {"variable"};
token KWConstant {"constants"} | {"constant"};
token KWDataPattern
    {"FIRST_ROW_1"}
  | {"LAST_ROW_1"}
  | {"FIRST_COLUMN_1"}
  | {"LAST_COLUMN_1"}
  | {"FIRST_SLICE_1"}
  | {"LAST_SLICE_1"};
position token PIdent (letter (letter|digit|'_'|'\'')*) ;

-- Layout
layout ":";

-- Problem - main entry
Problem. Problem ::= [Block];
BlockVariable. Block ::= VariableBlock;
BlockConstant. Block ::= ConstantBlock;
separator nonempty Block "";

-- Number
NumInt. Number ::= Integer;
NumDouble. Number ::= Double;

-- Value
ValFile. Val ::= "File" "(" String ")";
ValDataset. Val ::= "Dataset" "(" String "," String ")";
ValPattern. Val ::= "Pattern" "(" KWDataPattern ")";
ValRandom. Val ::= "Random";
ValLiteral. Val ::= Number;


-- Shape
Dim. Dim ::= "[" Integer "]";
ShapeScalar. Shape ::= ;
Shape1D. Shape ::= Dim;
Shape2D. Shape ::= Dim Dim;
Shape3D. Shape ::= Dim Dim Dim;


-- Variable
VariableNoInit. VariableDecl ::= PIdent Shape;
VariableWithInit. VariableDecl ::= PIdent Shape "=" Val;
separator VariableDecl ",";
VariableDeclGroup. VariableDeclGroup ::= [VariableDecl];
separator VariableDeclGroup ";";
VariableBlock. VariableBlock ::= KWVariable ":" "{" [VariableDeclGroup] "}";

-- Constant
ConstantDecl. ConstantDecl ::= PIdent Shape "=" Val;
separator ConstantDecl ",";
ConstantDeclGroup. ConstantDeclGroup ::= [ConstantDecl];
separator ConstantDeclGroup ";";
ConstantBlock. ConstantBlock ::= KWConstant ":" "{" [ConstantDeclGroup] "}";
