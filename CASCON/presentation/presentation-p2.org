#+TITLE: Two Functional MDD's for the Price of One - Part 2
#+AUTHOR: TODO add list of authors
#+DATE: November 6, 2019
#+OPTIONS: H:2 toc:t num:t
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation]
#+BEAMER_THEME: Boadilla
#+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col)
#+LATEX_HEADER_EXTRA: \usepackage{amsmath, amssymb}
#+LATEX_HEADER: \usepackage[backend=bibtex]{biblatex}
#+LATEX_HEADER: \bibliography{References}

* Symphony - Modeling Language for Non-Linear Optimization  
** Symphony - Modeling Language for Non-Linear Optimization
  - Models linear and non-linear programming problems
  - Simple declarative language
  - Support for bounded parameters and constraint programming
  - Generates performance oriented c code
  - Solver Agnostic (plug into your solver of choice)
* Sample Problem 1
** Velocity Problem
* Sample Problem 2
** (Brain Problem)
** Play with generating HDF5
* Sample Problem 3 
** (Multi-Coil MRI / Constraint Programming)
** Play with Scaling Factor
** Play With L2-Norm / Hubar Penalty
* Hashed Expression - Symphony's Backend
** Hashed Expression - Symphony's Backend
  - Embedded Language in *Haskell*
* References
** References

  \printbibliography[heading=none]
