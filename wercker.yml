box: hashexpression/wercker
no-response-timeout: 10

build:
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    - script:
        name: restore cache
        code: |
          if [ -e "$WERCKER_CACHE_DIR/.stack-work" ]; then
            cp -r $WERCKER_CACHE_DIR/.stack-work .
          fi
    - script:
        name: build & test
        code: |
          stack build --test --ghc-options -O2 --copy-bins --local-bin-path bins
    - script:
        name: store cache
        code: |
          cp -r .stack-work $WERCKER_CACHE_DIR


create-release:
  box: ubuntu
  steps:
    - install-packages:
        packages: curl file
    - script:
        name: Get release version
        code: |
          export RELEASE_VERSION=$(cat VERSION)
    - script:
        name: Create symphony archive
        code: |
          tar czf symphony-$RELEASE_VERSION-linux.tar.gz --directory=bins symphony
    - script:
        name: Create lbfgs-b archive
        code: |
          tar czf lbfgs-b-$RELEASE_VERSION.tar.gz --directory=algorithms/lbfgs-b `ls algorithms/lbfgs-b`
    - script:
        name: Create ipopt archive
        code: |
          tar czf ipopt-$RELEASE_VERSION.tar.gz --directory=algorithms/ipopt `ls algorithms/ipopt`
    - wercker/github-create-release@2.1.1:
        token: $GITHUB_TOKEN
        tag: v$RELEASE_VERSION
        title: v$RELEASE_VERSION
    - wercker/github-upload-asset@2.1.1:
        token: $GITHUB_TOKEN
        file: symphony-$RELEASE_VERSION-linux.tar.gz
    - wercker/github-upload-asset@2.1.1:
        token: $GITHUB_TOKEN
        file: ipopt-$RELEASE_VERSION.tar.gz
    - wercker/github-upload-asset@2.1.1:
        token: $GITHUB_TOKEN
        file: lbfgs-b-$RELEASE_VERSION.tar.gz



create-docker-image:
  box: hashexpression/symphony_env
  steps:
    - script:
        name: Remove unncessary directories & files
        code: |
          rm -rf .stack-work
          rm -rf .git
    - script:
        name: Copy symphony to PATH
        code: |
          cp bins/symphony /usr/bin
    - internal/docker-push:
        username: $DOCKERHUB_USERNAME # Registry username
        password: $DUCKERHUB_PASSWORD # Registry password
        repository: hashexpression/symphony


